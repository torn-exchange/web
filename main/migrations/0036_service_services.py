# Generated by Django 3.0.8 on 2024-09-15 23:00

from django.db import migrations, models
import django.db.models.deletion


def default_services():
    return [
        {'name': 'Bookie Tips', 'description': '', 'category': 'Torn feature'},
        {'name': 'Racing Assistant', 'description': '', 'category': 'Torn feature'},
        {'name': 'Reviving', 'description': '', 'category': 'Torn feature'},
        {'name': 'Stocks Advice', 'description': '', 'category': 'Torn feature'},
        
        {'name': 'View anonymous bounties', 'description': '', 'category': 'Company specials'},
        {'name': 'Hack a company\'s bank account', 'description': '', 'category': 'Company specials'},
        {'name': 'Company productivity boost', 'description': '', 'category': 'Company specials'},
        {'name': 'Flight Delay', 'description': '', 'category': 'Company specials'},
        {'name': 'See Friends & Enemies', 'description': '', 'category': 'Company specials'},
        {'name': 'View Money on Hand', 'description': '', 'category': 'Company specials'},
        {'name': 'View Stats & Money', 'description': '', 'category': 'Company specials'},
        {'name': 'True Level Reveal', 'description': '', 'category': 'Company specials'},
        {'name': 'Stat Spies', 'description': '', 'category': 'Company specials'},
        {'name': 'Creating Discord Bots', 'description': '', 'category': 'Software'},
        
        {'name': 'General Coding', 'description': '', 'category': 'Software'},
        {'name': 'Scripting', 'description': '', 'category': 'Software'},
        {'name': 'Discord Administration', 'description': '', 'category': 'Software'},
        {'name': 'Custom Spreadsheets', 'description': '', 'category': 'Software'},
        
        {'name': 'Selling Escapes', 'description': '', 'category': 'Attacking'},
        {'name': 'Selling Losses', 'description': '', 'category': 'Attacking'},
        {'name': 'Selling Stalemates', 'description': '', 'category': 'Attacking'},
        {'name': 'Mercenary', 'description': '', 'category': 'Attacking'},
        
        {'name': 'Graphics', 'description': '', 'category': 'Custom services'},
        {'name': 'RW Armor', 'description': '', 'category': 'Custom services'},
        {'name': 'RW Weapons', 'description': '', 'category': 'Custom services'},
        
        {'name': 'Other', 'description': '', 'category': 'Other'},
    ]

def add_default_services(apps, schema_editor):
    # Get the Service model
    Service = apps.get_model('main', 'Service')

    # Insert default entries into the database
    data = default_services()
    for service_data in data:
        Service.objects.create(**service_data)

def remove_default_services(apps, schema_editor):
    # Get the Service model
    Service = apps.get_model('main', 'Service')

    # Delete all default services
    service_names = [service['name'] for service in default_services()]
    services_to_delete = Service.objects.filter(name__in=service_names)
    services_to_delete.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0023_auto_20210309_1948'),
        ('main', '0035_remove_listing_effective_price'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('description', models.TextField(max_length=250)),
                ('category', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money_price', models.BigIntegerField(null=True)),
                ('barter_price', models.TextField(max_length=20)),
                ('offer_description', models.TextField(max_length=250)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Profile')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Service')),
            ],
        ),
        migrations.RunPython(add_default_services, remove_default_services)
    ]
